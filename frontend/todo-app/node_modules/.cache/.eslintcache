[{"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/index.js":"1","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/reportWebVitals.js":"2","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/App.js":"3","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/Counter.jsx":"4","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/learning-example/FirstComponent.jsx":"5","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/learning-example/SecondComponent.jsx":"6","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/learning-example/ThirdComponent.jsx":"7","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/CounterButton.jsx":"8","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/TodoApp.jsx":"9"},{"size":500,"mtime":1628941634345,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1628782224518,"results":"12","hashOfConfig":"11"},{"size":813,"mtime":1629253499593,"results":"13","hashOfConfig":"11"},{"size":1500,"mtime":1629189408466,"results":"14","hashOfConfig":"11"},{"size":274,"mtime":1628997100530,"results":"15","hashOfConfig":"11"},{"size":252,"mtime":1628997100530,"results":"16","hashOfConfig":"11"},{"size":191,"mtime":1628997100530,"results":"17","hashOfConfig":"11"},{"size":1015,"mtime":1629191381755,"results":"18","hashOfConfig":"11"},{"size":2413,"mtime":1629258467709,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1i7f3uq",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/index.js",[],["40","41"],"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/reportWebVitals.js",[],"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/App.js",["42","43"],"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/Counter.jsx",[],"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/learning-example/FirstComponent.jsx",[],"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/learning-example/SecondComponent.jsx",[],"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/learning-example/ThirdComponent.jsx",[],"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/CounterButton.jsx",["44"],"import React, {Component} from \"react\"\nimport propTypes from \"prop-types\"\nimport './CounterButton.css'\n\nclass CounterButton extends Component {\n    constructor() {\n        super()\n    }\n\n    // we can change original function into arrow function\n    // we can also include inline css in JSX\n    render() {\n        // const style = {fontSize: \"35px\", padding: \"15px 30px\"}\n        return (\n            <div className=\"counter\">\n            <button onClick={() => this.props.incrementMethod(this.props.by)}>+{this.props.by}</button>\n            <button onClick={() => this.props.decrementMethod(this.props.by)}>-{this.props.by}</button>\n            {/*<span className=\"count\" \n            //  style={style}\n            >{this.state.counter}\n            </span>*/}\n            </div>\n        )\n    }\n}\n\n// set a default value for props in Counter\nCounterButton.defaultProps = {\n    by : 1\n}\n// Type check when passing value to props\nCounterButton.propTypes = {\n    by : propTypes.number\n}\n\nexport default CounterButton","/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/TodoApp.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":15},{"ruleId":"49","severity":1,"message":"53","line":20,"column":7,"nodeType":"51","messageId":"52","endLine":20,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":6,"column":5,"nodeType":"56","messageId":"57","endLine":8,"endColumn":6},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar","'LearningComponent' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]