{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/WelcomeComponent.jsx\";\nimport React, { Component } from 'react';\nimport HelloWorldService from '../../api/todo/HelloWorldService.js';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WelcomeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      welcomeMessage: ''\n    };\n    this.retrieveWelcomMessage = this.retrieveWelcomMessage.bind(this);\n    this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\"Welcome to this page, \", this.props.match.params.name, \"! You can manage your todos \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/todos\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 47\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\"Click here for a customized welcome message.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.retrieveWelcomMessage,\n          className: \"btn btn-success\",\n          children: \"Get Welcome Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: this.state.welcomeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } // show response data\n\n\n  retrieveWelcomMessage() {\n    // Here comes a Promise object, we can use .then() to determine operations following its success, or .catch() to execute after its failure.\n    // HelloWorldService.executeHelloWorldService()\n    // .then(response => this.handleSuccessfulResponse(response))\n    // call hello world bean service\n    HelloWorldService.executeHelloWorldBeanService().then(response => this.handleSuccessfulResponse(response));\n  }\n\n  handleSuccessfulResponse(response) {\n    console.log(response);\n    this.setState({\n      welcomeMessage: response.data\n    });\n  }\n\n}\n\nexport default WelcomeComponent;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/WelcomeComponent.jsx"],"names":["React","Component","HelloWorldService","Link","WelcomeComponent","constructor","props","state","welcomeMessage","retrieveWelcomMessage","bind","handleSuccessfulResponse","render","match","params","name","executeHelloWorldBeanService","then","response","console","log","setState","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAGA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKC,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BD,IAA9B,CAAmC,IAAnC,CAAhC;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,6CAC2B,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,IADnD,+CAE8B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gFAEI;AAAQ,UAAA,OAAO,EAAE,KAAKN,qBAAtB;AAA6C,UAAA,SAAS,EAAC,iBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACK,KAAKF,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA,oBADJ;AAgBH,GA3BoC,CA6BrC;;;AACAC,EAAAA,qBAAqB,GAAG;AACpB;AACA;AACA;AAEA;AACAP,IAAAA,iBAAiB,CAACc,4BAAlB,GACCC,IADD,CACMC,QAAQ,IAAI,KAAKP,wBAAL,CAA8BO,QAA9B,CADlB;AAEH;;AAEDP,EAAAA,wBAAwB,CAACO,QAAD,EAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAKG,QAAL,CAAc;AAACb,MAAAA,cAAc,EAAEU,QAAQ,CAACI;AAA1B,KAAd;AACH;;AA3CoC;;AA+CzC,eAAelB,gBAAf","sourcesContent":["import React, {Component} from 'react'\nimport HelloWorldService from '../../api/todo/HelloWorldService.js'\nimport { Link } from 'react-router-dom'\n\nclass WelcomeComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            welcomeMessage: '',\n        }\n        this.retrieveWelcomMessage = this.retrieveWelcomMessage.bind(this)\n        this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this)\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Welcome!</h1>\n                <div className=\"container\">\n                    Welcome to this page, {this.props.match.params.name}! \n                    You can manage your todos <Link to=\"/todos\">here</Link>.\n                </div>\n                <div className=\"container\">\n                    Click here for a customized welcome message. \n                    <button onClick={this.retrieveWelcomMessage} className=\"btn btn-success\">Get Welcome Message</button>\n                </div>\n                <div className=\"container\">\n                    {this.state.welcomeMessage}\n                </div>\n            </>\n        )\n    }\n\n    // show response data\n    retrieveWelcomMessage() {\n        // Here comes a Promise object, we can use .then() to determine operations following its success, or .catch() to execute after its failure.\n        // HelloWorldService.executeHelloWorldService()\n        // .then(response => this.handleSuccessfulResponse(response))\n\n        // call hello world bean service\n        HelloWorldService.executeHelloWorldBeanService()\n        .then(response => this.handleSuccessfulResponse(response))\n    }\n\n    handleSuccessfulResponse(response) {\n        console.log(response)\n        this.setState({welcomeMessage: response.data})\n    }\n\n}\n\nexport default WelcomeComponent"]},"metadata":{},"sourceType":"module"}