{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/ListTodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodoComponent extends Component {\n  constructor(props) {\n    super(props); // console.log('constructor')\n\n    this.state = {\n      todos: [],\n      message: null\n    }; // binding\n\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshTodos();\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUser();\n    TodoDataService.retrieveAllTodos(username).then( // response => console.log(response)\n    response => {\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  render() {\n    // console.log('render')\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is Completed?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Operations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: moment(todo.targetDate).format('YYYY-MM-DD').toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => this.updateTodoClicked(todo.id),\n                  children: \"update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: () => this.deleteTodoClicked(todo.id),\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 41\n            }, this) // all attributes' names must match their names in backend data\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.addTodoClicked,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUser();\n    TodoDataService.deleteTodos(username, id).then(response => {\n      this.setState({\n        message: `Deleted the Todo No.${id} successfully.`\n      }); // here to refresh the page after delete a todo\n\n      this.refreshTodos();\n    }); // console.log(username + \" \" + id)\n  }\n\n  updateTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUser(); // console.log(\"update \" + id)\n\n    this.props.history.push(`/todos/${id}`);\n  }\n\n  addTodoClicked() {\n    this.props.history.push('/todos/-1');\n  }\n\n}\n\nexport default ListTodoComponent;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/ListTodoComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","ListTodoComponent","constructor","props","state","todos","message","deleteTodoClicked","bind","updateTodoClicked","refreshTodos","addTodoClicked","componentDidMount","username","getLoggedInUser","retrieveAllTodos","then","response","setState","data","render","map","todo","description","targetDate","format","toString","done","id","deleteTodos","history","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nclass ListTodoComponent extends Component{\n    constructor(props) {\n        super(props)\n        // console.log('constructor')\n        this.state = {\n            todos : [],\n            message : null\n        }\n        // binding\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.refreshTodos = this.refreshTodos.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshTodos()\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUser()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                // response => console.log(response)\n                response => {\n                    this.setState ({todos : response.data})\n                }\n            )\n    }\n\n    render() {\n        // console.log('render')\n        return (\n            <div>\n                <h1>Todo List</h1>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>Is Completed?</th>\n                                <th>Operations</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo =>\n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{moment(todo.targetDate).format('YYYY-MM-DD').toString()}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td><button className=\"btn btn-primary\" onClick={() => this.updateTodoClicked(todo.id)}>update</button></td>\n                                            <td><button className=\"btn btn-secondary\" onClick={() => this.deleteTodoClicked(todo.id)}>delete</button></td>\n                                        </tr>\n                                        // all attributes' names must match their names in backend data\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUser()\n        TodoDataService.deleteTodos(username, id)\n         .then (\n             response => { \n                this.setState({message : `Deleted the Todo No.${id} successfully.`})\n                // here to refresh the page after delete a todo\n                this.refreshTodos()\n                }\n         )\n        // console.log(username + \" \" + id)\n    }\n\n    updateTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUser()\n        // console.log(\"update \" + id)\n        this.props.history.push(`/todos/${id}`)\n    }\n\n    addTodoClicked() {\n        this.props.history.push('/todos/-1')\n    }\n}\n\nexport default ListTodoComponent"]},"metadata":{},"sourceType":"module"}