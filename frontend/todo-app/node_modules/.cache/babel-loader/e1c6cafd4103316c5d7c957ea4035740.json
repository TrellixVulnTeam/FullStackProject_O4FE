{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"hamburgersct\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Login Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 51\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 55\n        }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 32\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  } // handleUsernameChange(event) {\n  //     console.log(event.target.value)\n  //     this.setState({username : event.target.value})\n  // }\n  // handlePasswordChange(event) {\n  //     this.setState({password : event.target.value})\n  // }\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    if (this.state.username === \"hamburgersct\" && this.state.password === \"dummy\") {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    } else {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }\n\n    console.log(this.state);\n  }\n\n} // function ShowInvalidCredentials(props) {\n//     if (props.hasLoginFailed) {\n//         return <div>Invalid Credentials!</div>\n//     }\n//     return null\n// }\n// function ShowSuccessCredentials(props) {\n//     if (props.showSuccessMessage) {\n//         return <div>Login Successfully</div>\n//     }\n//     return null\n// }\n\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","render","event","setState","target","name","value","registerSuccessfulLogin","history","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,cADF;AAETC,MAAAA,QAAQ,EAAG,EAFF;AAGTC,MAAAA,cAAc,EAAG,KAHR;AAITC,MAAAA,kBAAkB,EAAG;AAJZ,KAAb,CAFe,CASf;AACA;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEK,KAAKR,KAAL,CAAWG,cAAX,iBAA6B;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFlC,EAIK,KAAKH,KAAL,CAAWI,kBAAX,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJtC,8BAKe;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAArD;AAA+D,UAAA,QAAQ,EAAE,KAAKI;AAA9E;AAAA;AAAA;AAAA;AAAA,gBALf,6BAMc;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,UAAA,QAAQ,EAAE,KAAKG;AAAlF;AAAA;AAAA;AAAA;AAAA,gBANd,eAOI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GA9BkC,CAgCnC;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAF,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AACV,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAsBH,KAAK,CAACE,MAAN,CAAaE;AADzB,KAAd;AAGH;;AAEDN,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKP,KAAL,CAAWC,QAAX,KAAwB,cAAxB,IAA0C,KAAKD,KAAL,CAAWE,QAAX,KAAwB,OAAtE,EAA+E;AAC3EN,MAAAA,qBAAqB,CAACkB,uBAAtB,CAA8C,KAAKd,KAAL,CAAWC,QAAzD,EAAmE,KAAKD,KAAL,CAAWE,QAA9E;AACA,WAAKH,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKhB,KAAL,CAAWC,QAAS,EAAxD;AACH,KAHD,MAIK;AACD,WAAKS,QAAL,CAAc;AAACN,QAAAA,kBAAkB,EAAG;AAAtB,OAAd;AACA,WAAKM,QAAL,CAAc;AAACP,QAAAA,cAAc,EAAG;AAAlB,OAAd;AACH;;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACH;;AAzDkC,C,CA4DvC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,cAAf","sourcesContent":["import React, {Component} from 'react'\nimport AuthenticationService from './AuthenticationService'\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username : \"hamburgersct\",\n            password : \"\",\n            hasLoginFailed : false,\n            showSuccessMessage : false,\n        }\n\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n    render() {\n        return(\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Login Failed</div>}\n                    {/*<ShowSuccessCredentials showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    {this.state.showSuccessMessage && <div>Login Successfully</div>}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n\n    // handleUsernameChange(event) {\n    //     console.log(event.target.value)\n    //     this.setState({username : event.target.value})\n    // }\n\n    // handlePasswordChange(event) {\n    //     this.setState({password : event.target.value})\n    // }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    loginClicked() {\n        if (this.state.username === \"hamburgersct\" && this.state.password === \"dummy\") {\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n            this.props.history.push(`/welcome/${this.state.username}`)\n        }\n        else {\n            this.setState({showSuccessMessage : false})\n            this.setState({hasLoginFailed : true})\n        }\n        console.log(this.state)\n    }\n}\n\n// function ShowInvalidCredentials(props) {\n//     if (props.hasLoginFailed) {\n//         return <div>Invalid Credentials!</div>\n//     }\n//     return null\n// }\n\n// function ShowSuccessCredentials(props) {\n//     if (props.showSuccessMessage) {\n//         return <div>Login Successfully</div>\n//     }\n//     return null\n// }\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}