{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/ListTodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodoComponent extends Component {\n  constructor(props) {\n    super(props); // console.log('constructor')\n\n    this.state = {\n      todos: [],\n      message: null\n    }; // binding\n\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n  }\n\n  componentDidMount() {\n    // console.log('mount')\n    // this method is called immediately after the component is mounted\n    // here is the right place to load data from a remote endpoint\n    let username = AuthenticationService.getLoggedInUser();\n    TodoDataService.retrieveAllTodos(username).then( // response => console.log(response)\n    response => {\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  render() {\n    // console.log('render')\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), this.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is Completed?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Operations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.targetDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => this.deleteTodoClicked(todo.id),\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 45\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 41\n            }, this) // all attributes' names must match their names in backend data\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUser();\n    TodoDataService.deleteTodos(username, id).then(response => {\n      this.setState({\n        message: `Deleted the Todo ${id} successfully.`\n      });\n    }); // console.log(username + \" \" + id)\n  }\n\n}\n\nexport default ListTodoComponent;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/ListTodoComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","ListTodoComponent","constructor","props","state","todos","message","deleteTodoClicked","bind","componentDidMount","username","getLoggedInUser","retrieveAllTodos","then","response","setState","data","render","map","todo","id","description","targetDate","toString","done","deleteTodos"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAAyC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,EADC;AAETC,MAAAA,OAAO,EAAG;AAFD,KAAb,CAHe,CAOf;;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA,QAAIC,QAAQ,GAAGV,qBAAqB,CAACW,eAAtB,EAAf;AACAZ,IAAAA,eAAe,CAACa,gBAAhB,CAAiCF,QAAjC,EACKG,IADL,EAEQ;AACAC,IAAAA,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAe;AAACV,QAAAA,KAAK,EAAGS,QAAQ,CAACE;AAAlB,OAAf;AACH,KALT;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKX,OAAL,iBAAgB;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsC,KAAKF,KAAL,CAAWE;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFrB,eAGI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAA,sBAEQ,KAAKF,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CACIC,IAAI,iBACA;AAAA,sCACI;AAAA,0BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKF,IAAI,CAACG,UAAL,CAAgBC,QAAhB;AAAL;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKJ,IAAI,CAACK,IAAL,CAAUD,QAAV;AAAL;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,uCAAI;AAAQ,kBAAA,SAAS,EAAC,iBAAlB;AAAoC,kBAAA,OAAO,EAAE,MAAM,KAAKhB,iBAAL,CAAuBY,IAAI,CAACC,EAA5B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA,eAASD,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,oBAFR,CASQ;AATR;AAFR;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkCH;;AAEDb,EAAAA,iBAAiB,CAACa,EAAD,EAAK;AAClB,QAAIV,QAAQ,GAAGV,qBAAqB,CAACW,eAAtB,EAAf;AACAZ,IAAAA,eAAe,CAAC0B,WAAhB,CAA4Bf,QAA5B,EAAsCU,EAAtC,EACEP,IADF,CAEKC,QAAQ,IAAI;AAAE,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAI,oBAAmBc,EAAG;AAAlC,OAAd;AAAkE,KAFrF,EAFkB,CAMlB;AACH;;AAvEoC;;AA0EzC,eAAenB,iBAAf","sourcesContent":["import React, {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ListTodoComponent extends Component{\n    constructor(props) {\n        super(props)\n        // console.log('constructor')\n        this.state = {\n            todos : [],\n            message : null\n        }\n        // binding\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n    }\n\n    componentDidMount() {\n        // console.log('mount')\n        // this method is called immediately after the component is mounted\n        // here is the right place to load data from a remote endpoint\n        let username = AuthenticationService.getLoggedInUser()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                // response => console.log(response)\n                response => {\n                    this.setState ({todos : response.data})\n                }\n            )\n    }\n\n    render() {\n        // console.log('render')\n        return (\n            <div>\n                <h1>Todo List</h1>\n                {this.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>id</th>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>Is Completed?</th>\n                                <th>Operations</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo =>\n                                        <tr key={todo.id}>\n                                            <td>{todo.id}</td>\n                                            <td>{todo.description}</td>\n                                            <td>{todo.targetDate.toString()}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>delete</button></td>\n                                        </tr>\n                                        // all attributes' names must match their names in backend data\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUser()\n        TodoDataService.deleteTodos(username, id)\n         .then (\n             response => { this.setState({message : `Deleted the Todo ${id} successfully.`})}\n         )\n        // console.log(username + \" \" + id)\n    }\n}\n\nexport default ListTodoComponent"]},"metadata":{},"sourceType":"module"}