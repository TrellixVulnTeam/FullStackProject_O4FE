{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/CounterButton.jsx\";\nimport React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  } // we can change original function into arrow function\n  // we can also include inline css in JSX\n\n\n  render() {\n    // const style = {fontSize: \"35px\", padding: \"15px 30px\"}\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: [\"-\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\" //  style={style}\n        ,\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  increment() {\n    //console.log(\"Increment\");\n    this.setState({\n      counter: this.state.counter + this.props.by\n    });\n  }\n\n  decrement() {\n    this.setState({\n      counter: this.state.counter - this.props.by\n    });\n  }\n\n} // set a default value for props in Counter\n\n\nCounterButton.defaultProps = {\n  by: 1\n}; // Type check when passing value to props\n\nCounterButton.propTypes = {\n  by: propTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/CounterButton.jsx"],"names":["React","Component","propTypes","CounterButton","constructor","state","counter","increment","bind","decrement","render","props","by","setState","defaultProps","number","Counter"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACH,GARiC,CAUlC;AACA;;;AACAE,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE,KAAKH,SAAtB;AAAA,wBAAmC,KAAKI,KAAL,CAAWC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAE,KAAKH,SAAtB;AAAA,wBAAmC,KAAKE,KAAL,CAAWC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAM,QAAA,SAAS,EAAC,OAAhB,CACA;AADA;AAAA,kBAEE,KAAKP,KAAL,CAAWC;AAFb;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAEDC,EAAAA,SAAS,GAAG;AACR;AACA,SAAKM,QAAL,CAAc;AACVP,MAAAA,OAAO,EAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKK,KAAL,CAAWC;AADhC,KAAd;AAGH;;AAEDH,EAAAA,SAAS,GAAG;AACR,SAAKI,QAAL,CAAc;AACVP,MAAAA,OAAO,EAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKK,KAAL,CAAWC;AADhC,KAAd;AAGH;;AArCiC,C,CAwCtC;;;AACAT,aAAa,CAACW,YAAd,GAA6B;AACzBF,EAAAA,EAAE,EAAG;AADoB,CAA7B,C,CAGA;;AACAT,aAAa,CAACD,SAAd,GAA0B;AACtBU,EAAAA,EAAE,EAAGV,SAAS,CAACa;AADO,CAA1B;AAIA,eAAeC,OAAf","sourcesContent":["import React, {Component} from \"react\"\nimport propTypes from \"prop-types\"\n\nclass CounterButton extends Component {\n    constructor() {\n        super()\n        this.state = {\n            counter : 0\n        }\n        this.increment = this.increment.bind(this)\n        this.decrement = this.decrement.bind(this)\n    }\n\n    // we can change original function into arrow function\n    // we can also include inline css in JSX\n    render() {\n        // const style = {fontSize: \"35px\", padding: \"15px 30px\"}\n        return (\n            <div className=\"counter\">\n            <button onClick={this.increment}>+{this.props.by}</button>\n            <button onClick={this.decrement}>-{this.props.by}</button>\n            <span className=\"count\" \n            //  style={style}\n            >{this.state.counter}\n            </span>\n            </div>\n        )\n    }\n\n    increment() {\n        //console.log(\"Increment\");\n        this.setState({\n            counter : this.state.counter + this.props.by\n        })\n    }\n\n    decrement() {\n        this.setState({\n            counter : this.state.counter - this.props.by\n        })\n    }\n}\n\n// set a default value for props in Counter\nCounterButton.defaultProps = {\n    by : 1\n}\n// Type check when passing value to props\nCounterButton.propTypes = {\n    by : propTypes.number\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}