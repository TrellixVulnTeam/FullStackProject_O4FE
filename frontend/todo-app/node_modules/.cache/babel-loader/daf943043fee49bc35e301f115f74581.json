{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/CounterButton.jsx\";\nimport React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport './CounterButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  } // we can change original function into arrow function\n  // we can also include inline css in JSX\n\n\n  render() {\n    // const style = {fontSize: \"35px\", padding: \"15px 30px\"}\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: [\"-\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  increment() {\n    // to call the increment() in Counter\n    this.props.incrementMethod(this.props.by);\n  }\n\n  decrement() {\n    // to call the decrement() in Counter\n    this.props.decrementMethod(this.props.by);\n  }\n\n} // set a default value for props in Counter\n\n\nCounterButton.defaultProps = {\n  by: 1\n}; // Type check when passing value to props\n\nCounterButton.propTypes = {\n  by: propTypes.number\n};\nexport default CounterButton;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/CounterButton.jsx"],"names":["React","Component","propTypes","CounterButton","constructor","increment","bind","decrement","render","props","by","incrementMethod","decrementMethod","defaultProps","number"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACH,GALiC,CAOlC;AACA;;;AACAE,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE,KAAKH,SAAtB;AAAA,wBAAmC,KAAKI,KAAL,CAAWC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAE,KAAKH,SAAtB;AAAA,wBAAmC,KAAKE,KAAL,CAAWC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAEDL,EAAAA,SAAS,GAAG;AACR;AACA,SAAKI,KAAL,CAAWE,eAAX,CAA2B,KAAKF,KAAL,CAAWC,EAAtC;AACH;;AAEDH,EAAAA,SAAS,GAAG;AACR;AACA,SAAKE,KAAL,CAAWG,eAAX,CAA2B,KAAKH,KAAL,CAAWC,EAAtC;AACH;;AA/BiC,C,CAkCtC;;;AACAP,aAAa,CAACU,YAAd,GAA6B;AACzBH,EAAAA,EAAE,EAAG;AADoB,CAA7B,C,CAGA;;AACAP,aAAa,CAACD,SAAd,GAA0B;AACtBQ,EAAAA,EAAE,EAAGR,SAAS,CAACY;AADO,CAA1B;AAIA,eAAeX,aAAf","sourcesContent":["import React, {Component} from \"react\"\nimport propTypes from \"prop-types\"\nimport './CounterButton.css'\n\nclass CounterButton extends Component {\n    constructor() {\n        super()\n        this.increment = this.increment.bind(this)\n        this.decrement = this.decrement.bind(this)\n    }\n\n    // we can change original function into arrow function\n    // we can also include inline css in JSX\n    render() {\n        // const style = {fontSize: \"35px\", padding: \"15px 30px\"}\n        return (\n            <div className=\"counter\">\n            <button onClick={this.increment}>+{this.props.by}</button>\n            <button onClick={this.decrement}>-{this.props.by}</button>\n            {/*<span className=\"count\" \n            //  style={style}\n            >{this.state.counter}\n            </span>*/}\n            </div>\n        )\n    }\n\n    increment() {\n        // to call the increment() in Counter\n        this.props.incrementMethod(this.props.by)\n    }\n\n    decrement() {\n        // to call the decrement() in Counter\n        this.props.decrementMethod(this.props.by)\n    }\n}\n\n// set a default value for props in Counter\nCounterButton.defaultProps = {\n    by : 1\n}\n// Type check when passing value to props\nCounterButton.propTypes = {\n    by : propTypes.number\n}\n\nexport default CounterButton"]},"metadata":{},"sourceType":"module"}