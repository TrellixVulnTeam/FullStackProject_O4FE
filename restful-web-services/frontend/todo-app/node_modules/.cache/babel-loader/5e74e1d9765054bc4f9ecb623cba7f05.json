{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from \"react\";\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  } // we can change original function into arrow function\n  // we can also include inline css in JSX\n\n\n  render() {\n    const style = {\n      fontSize: \"35px\",\n      padding: \"15px 30px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: \"-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        style: style,\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  increment() {\n    //console.log(\"Increment\");\n    this.setState({\n      counter: this.state.counter + 1\n    });\n  }\n\n  decrement() {\n    this.setState({\n      counter: this.state.counter - 1\n    });\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/counter/Counter.jsx"],"names":["React","Component","Counter","constructor","state","counter","increment","bind","decrement","render","style","fontSize","padding","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACH,GAR2B,CAU5B;AACA;;;AACAE,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG;AAACC,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAAd;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE,KAAKN,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAE,KAAKE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAM,QAAA,SAAS,EAAC,OAAhB;AACC,QAAA,KAAK,EAAEE,KADR;AAAA,kBACgB,KAAKN,KAAL,CAAWC;AAD3B;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAEDC,EAAAA,SAAS,GAAG;AACR;AACA,SAAKO,QAAL,CAAc;AACVR,MAAAA,OAAO,EAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AADrB,KAAd;AAGH;;AAEDG,EAAAA,SAAS,GAAG;AACR,SAAKK,QAAL,CAAc;AACVR,MAAAA,OAAO,EAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AADrB,KAAd;AAGH;;AAnC2B;;AAwChC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './Counter.css'\n\nclass Counter extends Component {\n    constructor() {\n        super()\n        this.state = {\n            counter : 0\n        }\n        this.increment = this.increment.bind(this)\n        this.decrement = this.decrement.bind(this)\n    }\n\n    // we can change original function into arrow function\n    // we can also include inline css in JSX\n    render() {\n        const style = {fontSize: \"35px\", padding: \"15px 30px\"}\n        return (\n            <div className=\"counter\">\n            <button onClick={this.increment}>+1</button>\n            <button onClick={this.decrement}>-1</button>\n            <span className=\"count\" \n             style={style}>{this.state.counter}</span>\n            </div>\n        )\n    }\n\n    increment() {\n        //console.log(\"Increment\");\n        this.setState({\n            counter : this.state.counter + 1\n        })\n    }\n\n    decrement() {\n        this.setState({\n            counter : this.state.counter - 1\n        })\n    }\n}\n\n\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}