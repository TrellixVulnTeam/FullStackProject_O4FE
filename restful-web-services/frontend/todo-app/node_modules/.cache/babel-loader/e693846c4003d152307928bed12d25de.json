{"ast":null,"code":"var _jsxFileName = \"/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/AuthenticatedRoute.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport AuthenticationService from './AuthenticationService'; // authenticated route allows only authenticated user to route to specific pages\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthenticatedRoute extends Component {\n  render() {\n    if (AuthenticationService.isLoggedIn()) {\n      /*#__PURE__*/\n      _jsxDEV(Route, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default AuthenticatedRoute;","map":{"version":3,"sources":["/Users/sihanhe/Developer/FullStackProject/frontend/todo-app/src/components/todo/AuthenticatedRoute.jsx"],"names":["React","Component","Redirect","Route","AuthenticationService","AuthenticatedRoute","render","isLoggedIn","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CAEA;;;;AACA,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA2C;AACvCK,EAAAA,MAAM,GAAG;AACL,QAAIF,qBAAqB,CAACG,UAAtB,EAAJ,EAAwC;AACpC;AAAA,cAAC,KAAD,OAAW,KAAKC;AAAhB;AAAA;AAAA;AAAA;AAAA;AACH,KAFD,MAEO;AACH;AAAA,cAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AACH;AACJ;;AAPsC;;AAU3C,eAAeH,kBAAf","sourcesContent":["import React, {Component} from 'react'\nimport { Redirect, Route } from 'react-router'\nimport AuthenticationService from './AuthenticationService'\n\n// authenticated route allows only authenticated user to route to specific pages\nclass AuthenticatedRoute extends Component {\n    render() {\n        if (AuthenticationService.isLoggedIn()) {\n            <Route {...this.props}/>\n        } else {\n            <Redirect to=\"/login\"/>\n        }\n    }\n}\n\nexport default AuthenticatedRoute"]},"metadata":{},"sourceType":"module"}